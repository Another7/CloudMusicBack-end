<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="star.sky.another.dao.UserMapper">
    <resultMap id="BaseResultMap" type="star.sky.another.model.entity.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="register_time" jdbcType="TIMESTAMP" property="registerTime"/>
        <result column="birthday" jdbcType="DATE" property="birthday"/>
        <result column="moment_number" jdbcType="INTEGER" property="momentNumber"/>
        <result column="follow_number" jdbcType="INTEGER" property="followNumber"/>
        <result column="follower_number" jdbcType="INTEGER" property="followerNumber"/>
        <result column="notification" jdbcType="LONGVARCHAR" property="notification"/>
        <result column="tag" jdbcType="LONGVARCHAR" property="tag"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="star.sky.another.model.entity.User">
        insert into user (id, nick_name, email,
                          password, image, gender,
                          tel, address, description,
                          birthday, moment_number,
                          follow_number, follower_number, notification,
                          tag)
        values (#{id,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
                #{tel,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
                #{birthday,jdbcType=DATE}, #{momentNumber,jdbcType=INTEGER},
                #{followNumber,jdbcType=INTEGER}, #{followerNumber,jdbcType=INTEGER},
                #{notification,jdbcType=LONGVARCHAR},
                #{tag,jdbcType=LONGVARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="star.sky.another.model.entity.User">
        update user
        <trim prefix="set" suffixOverrides=",">
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="image != null">
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="momentNumber != null">
                moment_number = #{momentNumber,jdbcType=INTEGER},
            </if>
            <if test="followNumber != null">
                follow_number = #{followNumber,jdbcType=INTEGER},
            </if>
            <if test="followerNumber != null">
                follower_number = #{followerNumber,jdbcType=INTEGER},
            </if>
            <if test="notification != null">
                notification = #{notification,jdbcType=LONGVARCHAR},
            </if>
            <if test="tag != null">
                tag = #{tag,jdbcType=LONGVARCHAR}
            </if>
        </trim>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id,
               nick_name,
               email,
               password,
               image,
               gender,
               tel,
               address,
               description,
               register_time,
               birthday,
               moment_number,
               follow_number,
               follower_number,
               notification,
               tag
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               nick_name,
               email,
               password,
               image,
               gender,
               tel,
               address,
               description,
               register_time,
               birthday,
               moment_number,
               follow_number,
               follower_number,
               notification,
               tag
        from user
    </select>
    <select id="selectByEmailPassword" parameterType="star.sky.another.model.entity.User" resultMap="BaseResultMap">
        select id,
               nick_name,
               email,
               password,
               image,
               gender,
               tel,
               address,
               description,
               register_time,
               birthday,
               moment_number,
               follow_number,
               follower_number,
               notification,
               tag
        from user
        where email = #{email, jdbcType=VARCHAR}
          and password = #{password, jdbcType=VARCHAR}
    </select>
    <select id="selectByUserEmail" parameterType="star.sky.another.model.entity.User" resultMap="BaseResultMap">
        select id,
               nick_name,
               email,
               password,
               image,
               gender,
               tel,
               address,
               description,
               register_time,
               birthday,
               moment_number,
               follow_number,
               follower_number,
               notification,
               tag
        from user
        where email = #{email, jdbcType=VARCHAR}
    </select>
</mapper>